server:
  port: 8000

spring:
  application:
    name: oauth-service
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:oauth}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:wsNXUxaupU9X6jCncsn3rOEy6PDt7oJO}
            authorization-grant-type: ${KEYCLOAK_GRANT_TYPE:password}
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://${KEYCLOAK_INTERNAL_HOST:keycloak}:${KEYCLOAK_INTERNAL_PORT:8080}/realms/${KEYCLOAK_REALM:constrsw}
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_INTERNAL_HOST:keycloak}:${KEYCLOAK_INTERNAL_PORT:8080}/realms/${KEYCLOAK_REALM:constrsw}

keycloak:
  realm: ${KEYCLOAK_REALM:constrsw}
  resource: ${KEYCLOAK_CLIENT_ID:oauth}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:wsNXUxaupU9X6jCncsn3rOEy6PDt7oJO}
  auth-server-url: http://${KEYCLOAK_INTERNAL_HOST:keycloak}:${KEYCLOAK_INTERNAL_PORT:8080}
  external-url: http://${KEYCLOAK_EXTERNAL_HOST:localhost}:${KEYCLOAK_EXTERNAL_PORT:8090}
  public-client: false
  ssl-required: external
  use-resource-role-mappings: true
  bearer-only: true